country = ifelse(country == "USA", "United States", country),
country = ifelse(country == "UK", "United Kingdom", country),
country = ifelse(country == "Phlippines", "Philippines", country),
country = ifelse(country == "Holland", "Netherlands", country))
ramen_ratings %>%
rename(Country = country) %>%
group_by(Country) %>%
summarise(Average = mean(stars),
Min = min(stars),
Median = median(stars),
Max = max(stars)) %>%
datatable(options = list(paging = TRUE)) %>%
formatRound(columns = c("Min", "Average", "Median", "Max"), digits = 1)
brands <- ramen_ratings %>%
count(brand) %>%
mutate(Rank = rank(-n)) %>%
filter(Rank <= 10) %>%
mutate_if(is.numeric, round, digits = 2)
ggplot(brands, aes(x = n,
y = reorder(brand, n))) +
geom_col(color = "black", fill = "#669933") +
geom_col(data = ~filter(.x, brand == "Nissin"),
fill = "#FFCC66") +
geom_text(aes(label = n), hjust = 1.25, color = "black") +
labs(y = "Ramen brand") +
theme_bw()+
ggtitle("Figure 2. Number of ramen varieties based on brands")
library(tidyverse)
library(ggplot2)
library(DT)
library(plotly)
library(visdat)
ramen_ratings <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-06-04/ramen_ratings.csv")
vis_miss(ramen_ratings)
ramen_ratings <- ramen_ratings %>%
filter(stars != is.na(stars))
ramen_ratings <- ramen_ratings %>%
mutate(country = ifelse(country == "Sarawak", "Malaysia", country),
country = ifelse(country == "USA", "United States", country),
country = ifelse(country == "UK", "United Kingdom", country),
country = ifelse(country == "Phlippines", "Philippines", country),
country = ifelse(country == "Holland", "Netherlands", country))
ramen_ratings %>%
rename(Country = country) %>%
group_by(Country) %>%
summarise(Average = mean(stars),
Min = min(stars),
Median = median(stars),
Max = max(stars)) %>%
datatable(options = list(paging = TRUE)) %>%
formatRound(columns = c("Min", "Average", "Median", "Max"), digits = 1)
brands <- ramen_ratings %>%
count(brand) %>%
mutate(Rank = rank(-n)) %>%
filter(Rank <= 10) %>%
mutate_if(is.numeric, round, digits = 2)
ggplot(brands, aes(x = n,
y = reorder(brand, n))) +
geom_col(color = "black", fill = "#669933") +
geom_col(data = ~filter(.x, brand == "Nissin"),
fill = "#FFCC66") +
geom_text(aes(label = n), hjust = 1.25, color = "black") +
labs(y = "Ramen brand") +
theme_bw()+
ggtitle("Figure 2. Number of ramen varieties based on brands")
ggplot(brands, aes(x = n,
y = reorder(brand, n))) +
geom_col(color = "black", fill = "#669933") +
geom_col(data = ~filter(.x, brand == "Nissin"),
fill = "#FFCC66") +
geom_text(aes(label = n), hjust = 1.25, color = "black") +
labs(x = "Number of ramen", y = "Ramen brand") +
theme_bw()+
ggtitle("Figure 2. Number of ramen varieties based on brands")
ggplot(ramen_ratings, aes(x = stars)) +
geom_histogram(color = "purple", fill = "purple", alpha = 0.2, bins = 20) +
labs(x = "Rating", y = "Number of ramen brands") +
ggtitle("Histogram of ratings across brands")
ggplot(ramen_ratings, aes(x = stars, y = "")) +
geom_histogram(color = "purple", fill = "purple", alpha = 0.2, bins = 20) +
geom_density() +
labs(x = "Rating", y = "Number of ramen brands") +
ggtitle("Histogram of ratings across brands")
ggplot(ramen_ratings, aes(x = stars)) +
geom_density() +
geom_histogram(color = "purple", fill = "purple", alpha = 0.2, bins = 20) +
labs(x = "Rating", y = "Number of ramen brands") +
ggtitle("Histogram of ratings across brands")
ggplot(ramen_ratings, aes(x = stars, y = "")) +
geom_density(color = "purple", fill = "purple", alpha = 0.2) +
geom_histogram(color = "purple", fill = "purple", alpha = 0.2, bins = 20) +
labs(x = "Rating", y = "Number of ramen brands") +
ggtitle("Histogram of ratings across brands")
ggplot(ramen_ratings, aes(x = stars)) +
geom_density() +
geom_histogram(color = "purple", fill = "purple", alpha = 0.2) +
labs(x = "Rating", y = "Number of ramen brands") +
ggtitle("Histogram of ratings across brands")
ggplot(ramen_ratings, aes(x = stars, y = "")) +
geom_density() +
geom_histogram(color = "purple", fill = "purple", alpha = 0.2) +
labs(x = "Rating", y = "Number of ramen brands") +
ggtitle("Histogram of ratings across brands")
ggplot(ramen_ratings, aes(x = stars)) +
geom_histogram(color = "purple", fill = "purple", alpha = 0.2, bins = 20) +
labs(x = "Rating", y = "Number of ramen brands") +
ggtitle("Histogram of ratings across brands")
worst <- ramen_ratings %>%
filter(stars < 3)
View(worst)
worst <- ramen_ratings %>%
filter(stars < 3) %>%
group_by(brands, variety) %>%
count(brands)
worst <- ramen_ratings %>%
filter(stars < 3) %>%
group_by(brand, variety) %>%
count(brand)
View(worst)
worst <- ramen_ratings %>%
filter(stars < 3) %>%
group_by(brand) %>%
count(brand)
View(worst)
worst <- ramen_ratings %>%
filter(stars < 3) %>%
group_by(brand) %>%
count(brand) %>%
arrange(-n) %>%
head(5)
View(worst)
worst <- ramen_ratings %>%
filter(stars < 3) %>%
group_by(brand) %>%
count(brand) %>%
arrange(-n) %>%
head(5) %>%
kableExtra::kable(col.names = c("Brand", "Number of ramen"))
worst <- ramen_ratings %>%
filter(stars < 3) %>%
group_by(brand) %>%
count(brand) %>%
arrange(-n) %>%
head(5) %>%
kableExtra::kable(col.names = c("Brand", "Number of ramen"))
worst
worst <- ramen_ratings %>%
filter(stars < 3) %>%
group_by(brand) %>%
count(brand) %>%
arrange(-n) %>%
head(5) %>%
kableExtra::kable(col.names = c("Brand", "Number of ramen")) %>%
kableExtra::kable(caption = "Top 5 worst rated ramen brands")
worst <- ramen_ratings %>%
filter(stars < 3) %>%
group_by(brand) %>%
count(brand) %>%
arrange(-n) %>%
head(5) %>%
kableExtra::kable(col.names = c("Brand", "Number of ramen")) %>%
kableExtra::kable(caption = "Top 5 worst rated ramen brands")
library(tidyverse)
library(ggplot2)
library(DT)
library(plotly)
library(visdat)
ramen_ratings <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-06-04/ramen_ratings.csv")
vis_miss(ramen_ratings)
ramen_ratings <- ramen_ratings %>%
filter(stars != is.na(stars))
ramen_ratings <- ramen_ratings %>%
mutate(country = ifelse(country == "Sarawak", "Malaysia", country),
country = ifelse(country == "USA", "United States", country),
country = ifelse(country == "UK", "United Kingdom", country),
country = ifelse(country == "Phlippines", "Philippines", country),
country = ifelse(country == "Holland", "Netherlands", country))
ramen_ratings %>%
rename(Country = country) %>%
group_by(Country) %>%
summarise(Average = mean(stars),
Min = min(stars),
Median = median(stars),
Max = max(stars)) %>%
datatable(options = list(paging = TRUE)) %>%
formatRound(columns = c("Min", "Average", "Median", "Max"), digits = 1)
brands <- ramen_ratings %>%
count(brand) %>%
mutate(Rank = rank(-n)) %>%
filter(Rank <= 10) %>%
mutate_if(is.numeric, round, digits = 2)
ggplot(brands, aes(x = n,
y = reorder(brand, n))) +
geom_col(color = "black", fill = "#669933") +
geom_col(data = ~filter(.x, brand == "Nissin"),
fill = "#FFCC66") +
geom_text(aes(label = n), hjust = 1.25, color = "black") +
labs(x = "Number of ramen", y = "Ramen brand") +
theme_bw()+
ggtitle("Figure 2. Number of ramen varieties based on brands")
ggplot(ramen_ratings, aes(x = stars)) +
geom_histogram(color = "purple", fill = "purple", alpha = 0.2, bins = 20) +
labs(x = "Rating", y = "Number of ramen brands") +
ggtitle("Histogram of ratings across brands")
worst <- ramen_ratings %>%
filter(stars < 3) %>%
group_by(brand) %>%
count(brand) %>%
arrange(-n) %>%
head(5) %>%
kableExtra::kable(col.names = c("Brand", "Number of ramen")) %>%
kableExtra::kable(caption = "Top 5 worst rated ramen brands")
worst <- ramen_ratings %>%
filter(stars < 3) %>%
group_by(brand) %>%
count(brand) %>%
arrange(-n) %>%
head(5) %>%
kableExtra::kable(col.names = c("Brand", "Number of ramen"), caption = "Top 5 worst rated ramen brands")
worst
worst <- ramen_ratings %>%
filter(stars < 3) %>%
group_by(brand) %>%
count(brand) %>%
arrange(-n) %>%
head(5) %>%
kableExtra::kable(col.names = c("Brand", "Number of ramen"), caption = "Top 5 brand with worst rated ramen")
worst
worst <- ramen_ratings %>%
filter(stars < 3) %>%
group_by(brand) %>%
count(brand) %>%
arrange(-n) %>%
head(5) %>%
kableExtra::kable(col.names = c("Brand", "Number of ramen"), caption = "Top 5 brand with worst rated ramen")
worst
asia <- c("Russia", "Thailand", "Japan", "Taiwan", "South Korea", "Hong Kong", "Malaysia", "China", "Philippines", "Vietnam", "Bangladesh", "Singapore", "Indonesia", "India", "Pakistan", "Nepal", "Myanmar", "Cambodia", "Dubai")
europe <- c("France", "Ukraine", "Netherlands", "Italy", "Poland", "Germany", "Hungary", "United Kingdom", "Finland", "Sweden", "Estonia")
oceania <- c("Australia", "New Zealand", "Fiji")
africa <- c("Nigeria", "Ghana")
america <- c("Canada", "United States", "Brazil", "Mexico", "Colombia")
corr <- ramen_ratings %>%
mutate(continent = case_when(
country %in% asia ~ "Asia",
country %in% europe ~ "Europe",
country %in% oceania ~ "Oceania",
country %in% america ~ "America",
country %in% africa ~ "Africa"))
corr <- corr %>%
group_by(continent, stars) %>%
count(stars)
View(corr)
ggplot(corr, aes(x = continent, y = stars)) +
geom_point(aes(fill = continent)) +
geom_smooth(method = "lm", sd = TRUE) +
ggbeeswarm::geom_quasirandom(size = 1) +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
ggplot(corr, aes(x = continent, y = stars)) +
geom_point(aes(fill = continent)) +
geom_smooth(method = "lm", sd = TRUE) +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
ggplot(ramen_ratings, aes(x = stars)) +
geom_histogram(color = "purple", fill = "purple", alpha = 0.2, bins = 20, aes(y = stat(density))) +
geom_density(color = "purple", fill = "purple", alpha = 0.2) +
labs(x = "Rating", y = "Number of ramen brands") +
ggtitle("Histogram of ratings across brands")
View(corr)
corr <- ramen_ratings %>%
mutate(continent = case_when(
country %in% asia ~ "Asia",
country %in% europe ~ "Europe",
country %in% oceania ~ "Oceania",
country %in% america ~ "America",
country %in% africa ~ "Africa"))
corr <- corr %>%
group_by(continent, stars) %>%
summarise(mean = mean(stars))
View(corr)
ggplot(corr, aes(x = continent, y = mean)) +
geom_boxplot(aes(fill = continent)) +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
ggplot(corr, aes(x = continent, y = mean, fill = continent)) +
geom_boxplot(aes()) +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
ggplot(corr, aes(x = continent, y = mean, fill = continent)) +
geom_boxplot() +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
corr <- corr %>%
group_by(continent, stars) %>%
summarise(mean = mean(stars))
ggplot(corr, aes(x = continent, y = mean, fill = continent)) +
geom_boxplot() +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
g <- ggplot(corr, aes(x = continent, y = mean, fill = continent)) +
geom_boxplot() +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
plotly(g)
ggplot(ramen_ratings, aes(x = stars)) +
geom_histogram(color = "purple", fill = "purple", alpha = 0.2, bins = 20, aes(y = stat(density))) +
geom_density(color = "purple", fill = "purple", alpha = 0.2) +
labs(x = "Rating", y = "Number of ramen brands") +
ggtitle("Histogram of ratings across brands")
g <- ggplot(corr, aes(x = continent, y = mean, fill = continent)) +
geom_boxplot() +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
plotly(g)
g <- ggplot(corr, aes(x = continent, y = mean, fill = continent)) +
geom_boxplot() +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
ggplotly(g)
asia <- c("Russia", "Thailand", "Japan", "Taiwan", "South Korea", "Hong Kong", "Malaysia", "China", "Philippines", "Vietnam", "Bangladesh", "Singapore", "Indonesia", "India", "Pakistan", "Nepal", "Myanmar", "Cambodia", "Dubai")
europe <- c("France", "Ukraine", "Netherlands", "Italy", "Poland", "Germany", "Hungary", "United Kingdom", "Finland", "Sweden", "Estonia")
oceania <- c("Australia", "New Zealand", "Fiji")
africa <- c("Nigeria", "Ghana")
america <- c("Canada", "United States", "Brazil", "Mexico", "Colombia")
corr <- ramen_ratings %>%
mutate(continent = case_when(
country %in% asia ~ "Asia",
country %in% europe ~ "Europe",
country %in% oceania ~ "Oceania",
country %in% america ~ "America",
country %in% africa ~ "Africa"))
g <- ggplot(corr, aes(x = continent, y = stars, fill = continent)) +
geom_boxplot() +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
ggplotly(g)
g <- ggplot(corr, aes(x = continent, y = stars)) +
geom_boxplot(fill = continent) +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
g <- ggplot(corr, aes(x = continent, y = stars)) +
geom_boxplot(aes(fill = continent)) +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
ggplotly(g)
g <- ggplot(corr, aes(x = continent, y = stars)) +
geom_line(aes(fill = continent)) +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
ggplotly(g)
g <- ggplot(corr, aes(x = continent, y = stars)) +
geom_boxplot(aes(fill = continent)) +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
ggplotly(g)
corr <- ramen_ratings %>%
mutate(continent = case_when(
country %in% asia ~ "Asia",
country %in% europe ~ "Europe",
country %in% oceania ~ "Oceania",
country %in% america ~ "America",
country %in% africa ~ "Africa"))
corr$stars <- ceiling(corr$stars)
View(corr)
g <- ggplot(corr, aes(x = continent, y = stars)) +
geom_boxplot(aes(fill = continent)) +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
ggplotly(g)
g <- ggplot(corr, aes(x = stars, y = count(stars))) +
geom_point(aes(fill = continent)) +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
ggplotly(g)
corr <- ramen_ratings %>%
mutate(continent = case_when(
country %in% asia ~ "Asia",
country %in% europe ~ "Europe",
country %in% oceania ~ "Oceania",
country %in% america ~ "America",
country %in% africa ~ "Africa"))
corr$stars <- ceiling(corr$stars)
corr <- corr %>%
group_by(continent, stars) %>%
mutate(Count = count(stars))
corr <- corr %>%
group_by(continent, stars) %>%
summarise(Count = sum(stars))
View(corr)
corr <- ramen_ratings %>%
mutate(continent = case_when(
country %in% asia ~ "Asia",
country %in% europe ~ "Europe",
country %in% oceania ~ "Oceania",
country %in% america ~ "America",
country %in% africa ~ "Africa"))
corr$stars <- ceiling(corr$stars)
View(corr)
corr <- corr %>%
group_by(continent, stars) %>%
summarise(Count = nrow(stars))
View(corr)
corr <- ramen_ratings %>%
mutate(continent = case_when(
country %in% asia ~ "Asia",
country %in% europe ~ "Europe",
country %in% oceania ~ "Oceania",
country %in% america ~ "America",
country %in% africa ~ "Africa"))
corr$stars <- ceiling(corr$stars)
View(corr)
corr <- corr %>%
group_by(continent, stars) %>%
mutate(Count = count(as.factor(stars)))
corr <- corr %>%
group_by(continent, stars) %>%
mutate(Count = sum(as.factor(stars)))
corr <- corr %>%
group_by(continent, stars) %>%
mutate(Count = n(as.factor(stars)))
corr <- ramen_ratings %>%
mutate(continent = case_when(
country %in% asia ~ "Asia",
country %in% europe ~ "Europe",
country %in% oceania ~ "Oceania",
country %in% america ~ "America",
country %in% africa ~ "Africa"))
corr$stars <- ceiling(corr$stars)
corr$stars <- as.factor(corr$stars)
View(corr)
corr <- corr %>%
group_by(continent, stars) %>%
mutate(Count = count(stars))
corr <- ramen_ratings %>%
mutate(continent = case_when(
country %in% asia ~ "Asia",
country %in% europe ~ "Europe",
country %in% oceania ~ "Oceania",
country %in% america ~ "America",
country %in% africa ~ "Africa"))
corr$stars <- ceiling(corr$stars)
corr$stars <- as.character(as.factor(corr$stars))
View(corr)
corr <- corr %>%
group_by(continent, stars) %>%
mutate(Count = count(stars))
corr <- corr %>%
group_by(continent) %>%
mutate(Count = count(stars))
corr <- corr %>%
group_by(continent) %>%
count(stars)
View(corr)
corr <- ramen_ratings %>%
mutate(continent = case_when(
country %in% asia ~ "Asia",
country %in% europe ~ "Europe",
country %in% oceania ~ "Oceania",
country %in% america ~ "America",
country %in% africa ~ "Africa"))
corr$stars <- ceiling(corr$stars)
corr$stars <- as.factor(corr$stars)
corr <- corr %>%
group_by(continent) %>%
count(stars)
View(corr)
corr <- ramen_ratings %>%
mutate(continent = case_when(
country %in% asia ~ "Asia",
country %in% europe ~ "Europe",
country %in% oceania ~ "Oceania",
country %in% america ~ "America",
country %in% africa ~ "Africa"))
corr$stars <- ceiling(corr$stars)
corr <- corr %>%
group_by(continent) %>%
count(stars)
View(corr)
sum(corr$n)
View(corr)
g <- ggplot(corr, aes(x = continent, y = n)) +
geom_point(aes(fill = stars)) +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
ggplotly(g)
g <- ggplot(corr, aes(x = stars, y = n)) +
geom_point(aes(fill = continent)) +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
ggplotly(g)
ggplot(corr, aes(x = stars, y = n)) +
geom_point(aes(fill = continent)) +
geom_smooth(method = "lm") +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
ggplot(corr, aes(x = continent, y = n)) +
geom_point(aes(fill = stars)) +
geom_smooth(method = "lm") +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
ggplot(corr, aes(x = stars, y = n)) +
geom_line(aes(fill = continent)) +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
ggplot(corr, aes(x = stars, y = n)) +
geom_line(aes(color = continent)) +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
ggplot(corr, aes(x = stars, y = n)) +
geom_boxplot(aes(color = continent)) +
scale_colour_brewer(palette = "Dark2") +
ggtitle("Count of ratings based on continent")
